"use strict";(self.webpackChunkcodehighlighting=self.webpackChunkcodehighlighting||[]).push([[150],{150:(n,e,t)=>{t.r(e),t.d(e,{default:()=>a});const a=function(n){const e=/([A-Za-z_][A-Za-z_0-9]*)?/,t={scope:"params",begin:/\(/,end:/\)(?=\:?)/,endsParent:!0,relevance:7,contains:[{scope:"string",begin:'"',end:'"'},{scope:"keyword",match:["true","false","in"].join("|")},{scope:"variable",match:/[A-Za-z_][A-Za-z_0-9]*/},{scope:"operator",match:/\+|\-|\*|\/|\%|\=\=|\=|\!|\>|\<|\&\&|\|\|/}]},a={match:[e,/(?=\()/],scope:{1:"keyword"},contains:[t]};return t.contains.unshift(a),{name:"Leaf",contains:[{match:[/#+/,e,/(?=\()/],scope:{1:"punctuation",2:"keyword"},starts:{contains:[{match:/\:/,scope:"punctuation"}]},contains:[t]},{match:[/#+/,e,/:?/],scope:{1:"punctuation",2:"keyword",3:"punctuation"}}]}}}}]);